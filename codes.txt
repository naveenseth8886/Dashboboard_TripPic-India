App.py


from flask import Flask, request, render_template, jsonify
import requests
from datetime import datetime

app = Flask(__name__)

@app.route("/")
def home():
    return render_template("index.html")

@app.route("/nextpage.html")
def source():
    return render_template("source_data.html")

# Route to handle form submission
global start_date
global end_date
global departure
@app.route("/submit", methods=["POST"])
def submit():
    # Fetch data from the form
    departure = request.form.get("departure")
    start_date = request.form.get("start_date")
    end_date = request.form.get("end_date")
    
    # Pass the data to the dashboard template
    return render_template("dashboard.html", departure=departure, start_date=start_date, end_date=end_date)

# Route to handle city data retrieval
def fetch_weather_forecast(start_date, end_date, city):
    API_KEY = "4af276f0c7f4969789e272dae0a06f5e"  # OpenWeatherMap API key
    try:
        url = "https://api.openweathermap.org/data/2.5/forecast"
        params = {
            "q": city,
            "appid": API_KEY,
            "units": "metric",  # Celsius
        }
        response = requests.get(url, params=params)
        if response.status_code != 200:
            print("Error fetching weather data:", response.json())
            return []
        
        data = response.json()
        forecast_list = data.get("list", [])
        
        start_date = datetime.strptime(start_date, "%Y-%m-%d").date()
        end_date = datetime.strptime(end_date, "%Y-%m-%d").date()
        
        filtered_data = []
        for forecast in forecast_list:
            forecast_datetime = datetime.utcfromtimestamp(forecast["dt"])
            forecast_date = forecast_datetime.date()
            if start_date <= forecast_date <= end_date:
                filtered_data.append({
                    "date": forecast_date.strftime("%Y-%m-%d"),
                    "time": forecast["dt_txt"],
                    "temperature": forecast["main"]["temp"],
                    "weather": forecast["weather"][0]["description"],
                })
        
        return filtered_data
    
    except Exception as e:
        print(f"An error occurred: {e}")
        return []

def fetch_news_from_newsapi(city):
    """
    Fetches the latest news related to a city using NewsAPI.
    """
    try:
        NEWS_API_KEY = "4ccb418765c04e3e98f32da30f62f60f"  # Provided NewsAPI key
        url = f"https://newsapi.org/v2/everything?q={city}&apiKey={NEWS_API_KEY}&pageSize=5"
        response = requests.get(url)
        if response.status_code != 200:
            print(f"Error fetching news for {city}: {response.status_code}")
            return []

        data = response.json()
        if "articles" not in data:
            print(f"No articles found for {city}")
            return []
        
        articles = data["articles"]
        news_data = []
        for article in articles:
            news_data.append({
                "title": article["title"],
                "description": article["description"],
                "url": article.get("url", "#")  # Fallback in case there's no URL
            })
        
        return news_data
    
    except Exception as e:
        print(f"An error occurred while fetching news: {e}")
        return []

@app.route("/get_city_data")
def get_city_data():
    city = request.args.get("city")  # Fetch the city name from the query parameters

    if not city:
        return jsonify({"error": "City parameter is missing"}), 400
    
    # Fetch the weather data for the selected city
    weather_data = fetch_weather_forecast("2024-12-16", "2024-12-20", city)

    # Fetch the news data for the selected city
    news_data = fetch_news_from_newsapi(city)
    
    # Prepare the response data
    response_data = {
        "weather": weather_data,
        "news": news_data,  # Include fetched news
        "flights": "Flight data is not available for now."  # Placeholder
    }

    return jsonify(response_data)

if __name__ == "__main__":
    app.run(debug=True)






Dashboard.HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TRIPICK INDIA Dashboard</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #000;
            color: #fff;
            margin: 0;
            padding: 0;
        }

        header {
            padding: 20px;
            text-align: center;
            background: linear-gradient(45deg, #ff7e5f, #feb47b);
            color: #000;
        }

        header h1 {
            margin: 0;
            font-size: 2.5rem;
        }

        .content {
            padding: 20px;
        }

        .section {
            margin-bottom: 20px;
            background-color: rgba(255, 126, 95, 0.2);
            padding: 15px;
            border-radius: 10px;
        }

        .section h2 {
            margin-top: 0;
            color: #feb47b;
        }

        .tableau-container {
            margin-bottom: 30px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    </style>
</head>
<body>
    <header>
        <h1>TRIPICK INDIA Dashboard</h1>
    </header>
    <div class="content">
        <!-- Tableau Dashboard -->
        <div class="tableau-container">
            <h2>Explore Cities</h2>
            <div id='tableauViz' style="width: 100%; height: 800px;"></div>
        </div>

        <!-- Weather Section -->
        <div class="section" id="weather">
            <h2>Weather Information</h2>
            <p id="weather-info">Click on a city in the map to see real-time weather updates here.</p>
        </div>

        <!-- News Section -->
        <div class="section" id="news">
            <h2>Latest News</h2>
            <p id="news-info">Click on a city in the map to see the latest news here.</p>
        </div>

        <!-- Flight Pricing Section -->
        <div class="section" id="flights">
            <h2>Flight Pricing</h2>
            <p id="flight-info">Click on a city in the map to see real-time flight pricing here.</p>
        </div>
    </div>

    <!-- Tableau and Custom Script -->
    <script type="text/javascript" src="https://public.tableau.com/javascripts/api/tableau-2.min.js"></script>
    <script type="text/javascript">
        let viz; // Global reference to Tableau Viz

        function handleCityClick(city) {
            console.log("City clicked:", city); // Debugging

            // Fetch data from backend for the selected city
            fetch(`/get_city_data?city=${encodeURIComponent(city)}`)
                .then(response => response.json())
                .then(data => {
                    // Update Weather Section
                    document.getElementById("weather-info").textContent = data.weather;

                    // Update News Section
                    document.getElementById("news-info").textContent = data.news;

                    // Update Flight Pricing Section
                    document.getElementById("flight-info").textContent = data.flights;
                })
                .catch(error => {
                    console.error("Error fetching data:", error);
                });
        }

        function initializeTableauViz() {
            const containerDiv = document.getElementById("tableauViz");
            const url = "https://public.tableau.com/views/TRIPICKINDIAF/TRIPICKINDIA";

            const options = {
                hideTabs: true,
                onFirstInteractive: function () {
                    console.log("Tableau Dashboard Loaded.");

                    // Event listener for marks selection
                    viz.addEventListener(tableau.TableauEventName.MARKS_SELECTION, function (event) {
                        event.getMarksAsync().then(function (marks) {
                            if (marks.length > 0) {
                                // Extract city name (correct column) instead of city rating
                                const pairs = marks[0].getPairs();
                                const cityField = pairs.find(pair => pair.fieldName.includes("City")); // Correct field selection
                                if (cityField) {
                                    const city = cityField.formattedValue;
                                    handleCityClick(city);
                                } else {
                                    console.error("City field not found in selected marks.");
                                }
                            }
                        });
                    });
                }
            };

            // Initialize Tableau Viz
            viz = new tableau.Viz(containerDiv, url, options);
        }

        // Load Tableau Dashboard on DOM content load
        document.addEventListener("DOMContentLoaded", initializeTableauViz);
    </script>
</body>
</html>



Source_dast.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Source Destination Input</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #000;
            color: #fff;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .form-container {
            background: linear-gradient(45deg, #ff7e5f, #feb47b);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 350px;
            text-align: center;
        }

        .form-container h1 {
            margin-bottom: 20px;
        }

        .form-container label {
            display: block;
            margin: 10px 0 5px;
            font-weight: bold;
        }

        .form-container input {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: none;
            border-radius: 5px;
        }

        .form-container button {
            background: #ff7e5f;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .form-container button:hover {
            background: #ff5e62;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h1>Plan Your Trip</h1>
        <form action="/submit" method="POST">
            <label for="departure">Departure Airport</label>
            <input type="text" id="departure" name="departure" placeholder="Enter airport name or code" required>

            <label for="start-date">Start Date</label>
            <input type="date" id="start-date" name="start_date" required>

            <label for="end-date">End Date</label>
            <input type="date" id="end-date" name="end_date" required>

            <button type="submit">Submit</button>
        </form>
    </div>
</body>
</html>


index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TRIPICK INDIA</title>
    <style>
        body {
            margin: 0;
            font-family: 'Arial', sans-serif;
            background-color: #000;
            color: #fff;
        }

        header {
            padding: 20px;
            text-align: center;
            background: linear-gradient(45deg, #ff7e5f, #feb47b);
            color: #000;
        }

        header h1 {
            margin: 0;
            font-size: 2.5rem;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .container {
            padding: 20px;
            text-align: center;
        }

        .zone {
            margin: 20px auto;
            padding: 20px;
            border: 2px solid #feb47b;
            border-radius: 10px;
            background-color: rgba(255, 126, 95, 0.2);
            max-width: 600px;
            box-shadow: 0 4px 8px rgba(255, 126, 95, 0.3);
        }

        .zone h2 {
            margin: 0;
            color: #feb47b;
        }

        .zone ul {
            list-style: none;
            padding: 0;
        }

        .zone ul li {
            margin: 10px 0;
        }

        .next-page-button {
            margin-top: 20px;
            padding: 15px 30px;
            background: linear-gradient(45deg, #feb47b, #ff7e5f);
            color: #000;
            text-transform: uppercase;
            font-weight: bold;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 1rem;
            transition: transform 0.3s ease, background 0.3s ease;
        }

        .next-page-button:hover {
            transform: scale(1.1);
            background: linear-gradient(45deg, #ff9966, #ff5e62);
        }

        .next-page-button a {
            text-decoration: none;
            color: inherit;
        }
    </style>
</head>
<body>
    <header>
        <h1>TRIPICK INDIA</h1>
    </header>

    <div class="container">
        <div class="zone">
            <h2>North Zone</h2>
            <ul>
                <li>Delhi</li>
                <li>Agra</li>
                <li>Shimla</li>
            </ul>
        </div>
        
        <div class="zone">
            <h2>South Zone</h2>
            <ul>
                <li>Bangalore</li>
                <li>Chennai</li>
                <li>Kochi</li>
            </ul>
        </div>

        <div class="zone">
            <h2>East Zone</h2>
            <ul>
                <li>Kolkata</li>
                <li>Darjeeling</li>
                <li>Guwahati</li>
            </ul>
        </div>

        <div class="zone">
            <h2>West Zone</h2>
            <ul>
                <li>Mumbai</li>
                <li>Goa</li>
                <li>Jaipur</li>
            </ul>
        </div>

        <button class="next-page-button" onclick="window.location.href='nextpage.html'">Get Trip Recommendation</button>
    </div>
</body>
</html>
